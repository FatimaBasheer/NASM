;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;Check if the string is a palindrome or not;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
section .data
not_palin:db "NOT PALINDROME",0Ah
nlen: equ $-not_palin
palin:db "PALINDROME",0Ah
len: equ $-palin 

section .bss
string1: resb 50
string2: resb 50
temp: resb 1
size: resb 1
count: resb 1
count1: resb 1

section .text
global _start
_start:
	call read_string
	movzx ecx,byte[count]
	mov esi,string1
	mov ebx,string1
	add ebx,ecx
	sub ebx,2
	
check:
	cld
	lodsb
	cmp al,0
	je pal
	mov cl,byte[ebx]
	cmp al,cl
	jne not_p
	dec ebx
	jmp check
	
	
pal:
	mov eax,4
	mov ebx,1
	mov ecx,palin
	mov edx,len
	int 80h
	jmp exit
	
not_p:
	mov eax,4
	mov ebx,1
	mov ecx,not_palin
	mov edx,nlen
	int 80h
	

exit:
	mov eax,1
	mov ebx,0
	int 80h


read_string:
	pusha
	mov edi,string1
	cld
	
 	read:
	inc byte[count]
	mov eax,3
	mov ebx,0
	mov ecx,temp
	mov edx,1
	int 80h
	
	cmp byte[temp],10
	je end_read
	mov al,byte[temp]
	stosb
	jmp read
	
end_read:
	mov al,0
	stosb
	popa
	ret

print_string:
	pusha
	cld
	mov esi,string2

	print:
	lodsb
	mov byte[temp],al
	cmp al,0
	je end_print 
	
	mov eax,4
	mov ebx,1
	mov ecx,temp
	mov edx,1
	int 80h
	jmp print
end_print:
	popa
	ret

print_char:
	pusha
	mov byte[temp],al
	mov eax,4
	mov ebx,1
	mov ecx,temp
	mov edx,1
	int 80h
	popa
	ret

