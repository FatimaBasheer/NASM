;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;PROGRAM TO COUNT THE NUMBER OF VOWELS IN A GIVEN STRING;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
section .data
a:db "a"
e:db "e"
i:db "i"
o:db "o"
u:db "u"
zero:db "0"
A:db "A"
E:db "E"
I:db "I"
O:db "O"
U:db "U"

section .bss
string1: resb 50
string2: resb 50
temp: resb 1
count:resb 1
num:resw 1
nod:resb 1

section .text
global _start
_start:
	call read_string
	dec byte[count]
	cld
	mov esi,string1

counting:
	lodsb
	cmp al,0
	je print_n
	mov cl,byte[a]
	cmp al,cl
	je vowel

	mov cl,byte[e]
	cmp al,cl
	je vowel

	mov cl,byte[i]
	cmp al,cl
	je vowel
		
	mov cl,byte[o]
	cmp al,cl
	je vowel
		
	mov cl,byte[u]
	cmp al,cl
	je vowel

	mov cl,byte[A]
	cmp al,cl
	je vowel

	mov cl,byte[E]
	cmp al,cl
	je vowel

	mov cl,byte[I]
	cmp al,cl
	je vowel

	mov cl,byte[O]
	cmp al,cl
	je vowel

	mov cl,byte[U]
	cmp al,cl
	je vowel
		
	jmp counting
	
vowel:
	inc word[num]
	jmp counting
print_n:
	call print_num
	mov eax,1
	mov ebx,0
	int 80h

read_string:
	pusha
	mov edi,string1
	cld
	
 	read:
	inc byte[count]
	mov eax,3
	mov ebx,0
	mov ecx,temp
	mov edx,1
	int 80h
	
	cmp byte[temp],10
	je end_read
	mov al,byte[temp]
	stosb
	jmp read
	
end_read:
	mov al,0
	stosb
	popa
	ret

print_string:
	pusha
	cld
	mov esi,string2

	print:
	lodsb
	mov byte[temp],al
	cmp al,0
	je end_print 
	
	mov eax,4
	mov ebx,1
	mov ecx,temp
	mov edx,1
	int 80h
	jmp print
end_print:
	popa
	ret
print_num:
	pusha
	cmp word[num],0
	je print_zero
	extract_no:
	cmp word[num],0
	je print_no
	inc byte[nod]
	mov dx,0
	mov ax,word[num]
	mov bx,10
	div bx
	push dx
	mov word[num],ax
	jmp extract_no
	
	print_no:
	cmp byte[nod],0
	je end_prin
	dec byte[nod]
	pop dx
	mov byte[temp],dl
	add byte[temp],30h
	
	mov eax,4
	mov ebx,1
	mov ecx,temp
	mov edx,1
	int 80h
	jmp print_no

	print_zero:
	mov eax,4
	mov ebx,1
	mov ecx,zero
	mov edx,1
	int 80h
	
	end_prin:
	popa
	ret
