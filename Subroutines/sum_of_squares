;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;sum of squares of the given 10 numbers;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
section .data
zero: db "0",0Ah

section .bss
array : resb 50
temp  : resb 1
num   : resw 1
nod   : resb 1
ten : resb 1
sos: resw 1
int : resw 1

section .text
	global _start
_start:

mov byte[ten],10
call operation

print_ans:
	mov ax,word[sos]	
	mov word[num],ax
	call print_num
	jmp exit


operation:
	cmp byte[ten],0
	je end_op
	dec byte[ten]
	call read_num
	call square
	mov ax,word[num]
	add word[sos],ax
	call operation

	end_op:
	ret
square:
	mov ax,word[num]
	mov bx,word[num]
	mul bx
	mov word[num],ax
	ret
print_num:
	pusha
	cmp word[num],0
	je print_zero
	extract_no:
	cmp word[num],0
	je print_no
	inc byte[nod]
	mov dx,0
	mov ax,word[num]
	mov bx,10
	div bx
	push dx
	mov word[num],ax
	jmp extract_no
	
	print_no:
	cmp byte[nod],0
	je end_print
	dec byte[nod]
	pop dx
	mov byte[temp],dl
	add byte[temp],30h
	
	mov eax,4
	mov ebx,1
	mov ecx,temp
	mov edx,1
	int 80h
	jmp print_no

	print_zero:
	mov eax,4
	mov ebx,1
	mov ecx,zero
	mov edx,1
	int 80h
	
	end_print:
	popa
	ret
read_num:
	pusha
	mov word[num],0
	
	loop_read:
	mov eax,3
	mov ebx,0
	mov ecx,temp
	mov edx,1
	int 80h

	cmp byte[temp],10
	je end_read

	cmp byte[temp],32
	je end_read
	
	mov ax,word[num]
	mov bx,10
	mul bx
	mov bl,byte[temp]
	sub bl,30h
	mov bh,0
	add ax,bx
	mov word[num],ax
	jmp loop_read
	
	end_read:
	popa
	ret

exit:
	mov eax,1
	mov ebx,0
	int 80h
	
